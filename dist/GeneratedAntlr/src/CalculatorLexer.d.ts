import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class CalculatorLexer extends Lexer {
    static readonly T__0 = 1;
    static readonly T__1 = 2;
    static readonly T__2 = 3;
    static readonly T__3 = 4;
    static readonly T__4 = 5;
    static readonly T__5 = 6;
    static readonly T__6 = 7;
    static readonly T__7 = 8;
    static readonly T__8 = 9;
    static readonly NUMBER = 10;
    static readonly FLOAT = 11;
    static readonly DIGIT = 12;
    static readonly MOD = 13;
    static readonly WHOLE = 14;
    static readonly MUL = 15;
    static readonly DIV = 16;
    static readonly ADD = 17;
    static readonly SUB = 18;
    static readonly PI = 19;
    static readonly EXPONENT = 20;
    static readonly NEGEXPONENT = 21;
    static readonly EULER = 22;
    static readonly SQRT = 23;
    static readonly SQR = 24;
    static readonly FLOOR = 25;
    static readonly CEIL = 26;
    static readonly ABS = 27;
    static readonly ROUNDK = 28;
    static readonly ROUND = 29;
    static readonly TRUNC = 30;
    static readonly SIN = 31;
    static readonly COS = 32;
    static readonly TAN = 33;
    static readonly COT = 34;
    static readonly SINH = 35;
    static readonly COSH = 36;
    static readonly TANH = 37;
    static readonly ARCSIN = 38;
    static readonly ARCCOS = 39;
    static readonly ARCTAN = 40;
    static readonly ARCTAN2 = 41;
    static readonly ARCCOT = 42;
    static readonly EXP = 43;
    static readonly LN = 44;
    static readonly EEX = 45;
    static readonly LOG = 46;
    static readonly RAD = 47;
    static readonly DEG = 48;
    static readonly MIN = 49;
    static readonly MAX = 50;
    static readonly WS = 51;
    static readonly COM = 52;
    static readonly SUBSTITUTION = 53;
    static readonly SEMICOLON = 54;
    static readonly INVALID = 55;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
